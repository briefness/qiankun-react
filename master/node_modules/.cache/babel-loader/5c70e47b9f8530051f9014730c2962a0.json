{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n/**\n * @author Kuitos\n * @homepage https://github.com/kuitos/\n * @since 2018-09-03 15:04\n */\n\nimport { getInlineCode, isModuleScriptSupported } from './utils';\nvar ALL_SCRIPT_REGEX = /(<script[\\s\\S]*?>)[\\s\\S]*?<\\/script>/gi;\nvar SCRIPT_TAG_REGEX = /<(script)[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]+((?!type=('|')text\\/ng\\x2Dtemplate\\3)[\\s\\S])*?>[\\s\\S]*?<\\/\\1>/i;\nvar SCRIPT_SRC_REGEX = /.*\\ssrc=('|\")?([^>'\"\\s]+)/;\nvar SCRIPT_TYPE_REGEX = /.*\\stype=('|\")?([^>'\"\\s]+)/;\nvar SCRIPT_ENTRY_REGEX = /.*\\sentry\\s*.*/;\nvar SCRIPT_ASYNC_REGEX = /.*\\sasync\\s*.*/;\nvar SCRIPT_NO_MODULE_REGEX = /.*\\snomodule\\s*.*/;\nvar SCRIPT_MODULE_REGEX = /.*\\stype=('|\")?module('|\")?\\s*.*/;\nvar LINK_TAG_REGEX = /<(link)[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]+[\\s\\S]*?>/ig;\nvar LINK_PRELOAD_OR_PREFETCH_REGEX = /\\srel=('|\")?(preload|prefetch)\\1/;\nvar LINK_HREF_REGEX = /.*\\shref=('|\")?([^>'\"\\s]+)/;\nvar LINK_AS_FONT = /.*\\sas=('|\")?font\\1.*/;\nvar STYLE_TAG_REGEX = /<style[^>]*>[\\s\\S]*?<\\/style>/gi;\nvar STYLE_TYPE_REGEX = /\\s+rel=('|\")?stylesheet\\1.*/;\nvar STYLE_HREF_REGEX = /.*\\shref=('|\")?([^>'\"\\s]+)/;\nvar HTML_COMMENT_REGEX = /<!--([\\s\\S]*?)-->/g;\nvar LINK_IGNORE_REGEX = /<link([\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]+|[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]+[\\s\\S]+[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]+)ignore([\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]*|[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]+[\\s\\S]*|=[\\s\\S]*)>/i;\nvar STYLE_IGNORE_REGEX = /<style([\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]+|[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]+[\\s\\S]+[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]+)ignore([\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]*|[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]+[\\s\\S]*|=[\\s\\S]*)>/i;\nvar SCRIPT_IGNORE_REGEX = /<script([\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]+|[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]+[\\s\\S]+[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]+)ignore([\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]*|[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]+[\\s\\S]*|=[\\s\\S]*)>/i;\n\nfunction hasProtocol(url) {\n  return url.startsWith('//') || url.startsWith('http://') || url.startsWith('https://');\n}\n\nfunction getEntirePath(path, baseURI) {\n  return new URL(path, baseURI).toString();\n}\n\nfunction isValidJavaScriptType(type) {\n  var handleTypes = ['text/javascript', 'module', 'application/javascript', 'text/ecmascript', 'application/ecmascript'];\n  return !type || handleTypes.indexOf(type) !== -1;\n}\n\nexport var genLinkReplaceSymbol = function genLinkReplaceSymbol(linkHref) {\n  var preloadOrPrefetch = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return \"<!-- \".concat(preloadOrPrefetch ? 'prefetch/preload' : '', \" link \").concat(linkHref, \" replaced by import-html-entry -->\");\n};\nexport var genScriptReplaceSymbol = function genScriptReplaceSymbol(scriptSrc) {\n  var async = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return \"<!-- \".concat(async ? 'async' : '', \" script \").concat(scriptSrc, \" replaced by import-html-entry -->\");\n};\nexport var inlineScriptReplaceSymbol = \"<!-- inline scripts replaced by import-html-entry -->\";\nexport var genIgnoreAssetReplaceSymbol = function genIgnoreAssetReplaceSymbol(url) {\n  return \"<!-- ignore asset \".concat(url || 'file', \" replaced by import-html-entry -->\");\n};\nexport var genModuleScriptReplaceSymbol = function genModuleScriptReplaceSymbol(scriptSrc, moduleSupport) {\n  return \"<!-- \".concat(moduleSupport ? 'nomodule' : 'module', \" script \").concat(scriptSrc, \" ignored by import-html-entry -->\");\n};\n/**\n * parse the script link from the template\n * 1. collect stylesheets\n * 2. use global eval to evaluate the inline scripts\n *    see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function#Difference_between_Function_constructor_and_function_declaration\n *    see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval#Do_not_ever_use_eval!\n * @param tpl\n * @param baseURI\n * @stripStyles whether to strip the css links\n * @returns {{template: void | string | *, scripts: *[], entry: *}}\n */\n\nexport default function processTpl(tpl, baseURI) {\n  var scripts = [];\n  var styles = [];\n  var entry = null;\n  var moduleSupport = isModuleScriptSupported();\n  var template = tpl\n  /*\n  remove html comment first\n  */\n  .replace(HTML_COMMENT_REGEX, '').replace(LINK_TAG_REGEX, function (match) {\n    /*\n    change the css link\n    */\n    var styleType = !!match.match(STYLE_TYPE_REGEX);\n\n    if (styleType) {\n      var styleHref = match.match(STYLE_HREF_REGEX);\n      var styleIgnore = match.match(LINK_IGNORE_REGEX);\n\n      if (styleHref) {\n        var href = styleHref && styleHref[2];\n        var newHref = href;\n\n        if (href && !hasProtocol(href)) {\n          newHref = getEntirePath(href, baseURI);\n        }\n\n        if (styleIgnore) {\n          return genIgnoreAssetReplaceSymbol(newHref);\n        }\n\n        styles.push(newHref);\n        return genLinkReplaceSymbol(newHref);\n      }\n    }\n\n    var preloadOrPrefetchType = match.match(LINK_PRELOAD_OR_PREFETCH_REGEX) && match.match(LINK_HREF_REGEX) && !match.match(LINK_AS_FONT);\n\n    if (preloadOrPrefetchType) {\n      var _match$match = match.match(LINK_HREF_REGEX),\n          _match$match2 = _slicedToArray(_match$match, 3),\n          linkHref = _match$match2[2];\n\n      return genLinkReplaceSymbol(linkHref, true);\n    }\n\n    return match;\n  }).replace(STYLE_TAG_REGEX, function (match) {\n    if (STYLE_IGNORE_REGEX.test(match)) {\n      return genIgnoreAssetReplaceSymbol('style file');\n    }\n\n    return match;\n  }).replace(ALL_SCRIPT_REGEX, function (match, scriptTag) {\n    var scriptIgnore = scriptTag.match(SCRIPT_IGNORE_REGEX);\n    var moduleScriptIgnore = moduleSupport && !!scriptTag.match(SCRIPT_NO_MODULE_REGEX) || !moduleSupport && !!scriptTag.match(SCRIPT_MODULE_REGEX); // in order to keep the exec order of all javascripts\n\n    var matchedScriptTypeMatch = scriptTag.match(SCRIPT_TYPE_REGEX);\n    var matchedScriptType = matchedScriptTypeMatch && matchedScriptTypeMatch[2];\n\n    if (!isValidJavaScriptType(matchedScriptType)) {\n      return match;\n    } // if it is a external script\n\n\n    if (SCRIPT_TAG_REGEX.test(match) && scriptTag.match(SCRIPT_SRC_REGEX)) {\n      /*\n      collect scripts and replace the ref\n      */\n      var matchedScriptEntry = scriptTag.match(SCRIPT_ENTRY_REGEX);\n      var matchedScriptSrcMatch = scriptTag.match(SCRIPT_SRC_REGEX);\n      var matchedScriptSrc = matchedScriptSrcMatch && matchedScriptSrcMatch[2];\n\n      if (entry && matchedScriptEntry) {\n        throw new SyntaxError('You should not set multiply entry script!');\n      } else {\n        // append the domain while the script not have an protocol prefix\n        if (matchedScriptSrc && !hasProtocol(matchedScriptSrc)) {\n          matchedScriptSrc = getEntirePath(matchedScriptSrc, baseURI);\n        }\n\n        entry = entry || matchedScriptEntry && matchedScriptSrc;\n      }\n\n      if (scriptIgnore) {\n        return genIgnoreAssetReplaceSymbol(matchedScriptSrc || 'js file');\n      }\n\n      if (moduleScriptIgnore) {\n        return genModuleScriptReplaceSymbol(matchedScriptSrc || 'js file', moduleSupport);\n      }\n\n      if (matchedScriptSrc) {\n        var asyncScript = !!scriptTag.match(SCRIPT_ASYNC_REGEX);\n        scripts.push(asyncScript ? {\n          async: true,\n          src: matchedScriptSrc\n        } : matchedScriptSrc);\n        return genScriptReplaceSymbol(matchedScriptSrc, asyncScript);\n      }\n\n      return match;\n    } else {\n      if (scriptIgnore) {\n        return genIgnoreAssetReplaceSymbol('js file');\n      }\n\n      if (moduleScriptIgnore) {\n        return genModuleScriptReplaceSymbol('js file', moduleSupport);\n      } // if it is an inline script\n\n\n      var code = getInlineCode(match); // remove script blocks when all of these lines are comments.\n\n      var isPureCommentBlock = code.split(/[\\r\\n]+/).every(function (line) {\n        return !line.trim() || line.trim().startsWith('//');\n      });\n\n      if (!isPureCommentBlock) {\n        scripts.push(match);\n      }\n\n      return inlineScriptReplaceSymbol;\n    }\n  });\n  scripts = scripts.filter(function (script) {\n    // filter empty script\n    return !!script;\n  });\n  return {\n    template: template,\n    scripts: scripts,\n    styles: styles,\n    // set the last script as entry if have not set\n    entry: entry || scripts[scripts.length - 1]\n  };\n}","map":{"version":3,"sources":["/Users/mory/Desktop/qiankun-react/master/node_modules/import-html-entry/esm/process-tpl.js"],"names":["_slicedToArray","getInlineCode","isModuleScriptSupported","ALL_SCRIPT_REGEX","SCRIPT_TAG_REGEX","SCRIPT_SRC_REGEX","SCRIPT_TYPE_REGEX","SCRIPT_ENTRY_REGEX","SCRIPT_ASYNC_REGEX","SCRIPT_NO_MODULE_REGEX","SCRIPT_MODULE_REGEX","LINK_TAG_REGEX","LINK_PRELOAD_OR_PREFETCH_REGEX","LINK_HREF_REGEX","LINK_AS_FONT","STYLE_TAG_REGEX","STYLE_TYPE_REGEX","STYLE_HREF_REGEX","HTML_COMMENT_REGEX","LINK_IGNORE_REGEX","STYLE_IGNORE_REGEX","SCRIPT_IGNORE_REGEX","hasProtocol","url","startsWith","getEntirePath","path","baseURI","URL","toString","isValidJavaScriptType","type","handleTypes","indexOf","genLinkReplaceSymbol","linkHref","preloadOrPrefetch","arguments","length","undefined","concat","genScriptReplaceSymbol","scriptSrc","async","inlineScriptReplaceSymbol","genIgnoreAssetReplaceSymbol","genModuleScriptReplaceSymbol","moduleSupport","processTpl","tpl","scripts","styles","entry","template","replace","match","styleType","styleHref","styleIgnore","href","newHref","push","preloadOrPrefetchType","_match$match","_match$match2","test","scriptTag","scriptIgnore","moduleScriptIgnore","matchedScriptTypeMatch","matchedScriptType","matchedScriptEntry","matchedScriptSrcMatch","matchedScriptSrc","SyntaxError","asyncScript","src","code","isPureCommentBlock","split","every","line","trim","filter","script"],"mappings":"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","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\n/**\n * @author Kuitos\n * @homepage https://github.com/kuitos/\n * @since 2018-09-03 15:04\n */\nimport { getInlineCode, isModuleScriptSupported } from './utils';\nvar ALL_SCRIPT_REGEX = /(<script[\\s\\S]*?>)[\\s\\S]*?<\\/script>/gi;\nvar SCRIPT_TAG_REGEX = /<(script)[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]+((?!type=('|')text\\/ng\\x2Dtemplate\\3)[\\s\\S])*?>[\\s\\S]*?<\\/\\1>/i;\nvar SCRIPT_SRC_REGEX = /.*\\ssrc=('|\")?([^>'\"\\s]+)/;\nvar SCRIPT_TYPE_REGEX = /.*\\stype=('|\")?([^>'\"\\s]+)/;\nvar SCRIPT_ENTRY_REGEX = /.*\\sentry\\s*.*/;\nvar SCRIPT_ASYNC_REGEX = /.*\\sasync\\s*.*/;\nvar SCRIPT_NO_MODULE_REGEX = /.*\\snomodule\\s*.*/;\nvar SCRIPT_MODULE_REGEX = /.*\\stype=('|\")?module('|\")?\\s*.*/;\nvar LINK_TAG_REGEX = /<(link)[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]+[\\s\\S]*?>/ig;\nvar LINK_PRELOAD_OR_PREFETCH_REGEX = /\\srel=('|\")?(preload|prefetch)\\1/;\nvar LINK_HREF_REGEX = /.*\\shref=('|\")?([^>'\"\\s]+)/;\nvar LINK_AS_FONT = /.*\\sas=('|\")?font\\1.*/;\nvar STYLE_TAG_REGEX = /<style[^>]*>[\\s\\S]*?<\\/style>/gi;\nvar STYLE_TYPE_REGEX = /\\s+rel=('|\")?stylesheet\\1.*/;\nvar STYLE_HREF_REGEX = /.*\\shref=('|\")?([^>'\"\\s]+)/;\nvar HTML_COMMENT_REGEX = /<!--([\\s\\S]*?)-->/g;\nvar LINK_IGNORE_REGEX = /<link([\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]+|[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]+[\\s\\S]+[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]+)ignore([\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]*|[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]+[\\s\\S]*|=[\\s\\S]*)>/i;\nvar STYLE_IGNORE_REGEX = /<style([\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]+|[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]+[\\s\\S]+[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]+)ignore([\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]*|[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]+[\\s\\S]*|=[\\s\\S]*)>/i;\nvar SCRIPT_IGNORE_REGEX = /<script([\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]+|[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]+[\\s\\S]+[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]+)ignore([\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]*|[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]+[\\s\\S]*|=[\\s\\S]*)>/i;\n\nfunction hasProtocol(url) {\n  return url.startsWith('//') || url.startsWith('http://') || url.startsWith('https://');\n}\n\nfunction getEntirePath(path, baseURI) {\n  return new URL(path, baseURI).toString();\n}\n\nfunction isValidJavaScriptType(type) {\n  var handleTypes = ['text/javascript', 'module', 'application/javascript', 'text/ecmascript', 'application/ecmascript'];\n  return !type || handleTypes.indexOf(type) !== -1;\n}\n\nexport var genLinkReplaceSymbol = function genLinkReplaceSymbol(linkHref) {\n  var preloadOrPrefetch = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return \"<!-- \".concat(preloadOrPrefetch ? 'prefetch/preload' : '', \" link \").concat(linkHref, \" replaced by import-html-entry -->\");\n};\nexport var genScriptReplaceSymbol = function genScriptReplaceSymbol(scriptSrc) {\n  var async = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return \"<!-- \".concat(async ? 'async' : '', \" script \").concat(scriptSrc, \" replaced by import-html-entry -->\");\n};\nexport var inlineScriptReplaceSymbol = \"<!-- inline scripts replaced by import-html-entry -->\";\nexport var genIgnoreAssetReplaceSymbol = function genIgnoreAssetReplaceSymbol(url) {\n  return \"<!-- ignore asset \".concat(url || 'file', \" replaced by import-html-entry -->\");\n};\nexport var genModuleScriptReplaceSymbol = function genModuleScriptReplaceSymbol(scriptSrc, moduleSupport) {\n  return \"<!-- \".concat(moduleSupport ? 'nomodule' : 'module', \" script \").concat(scriptSrc, \" ignored by import-html-entry -->\");\n};\n/**\n * parse the script link from the template\n * 1. collect stylesheets\n * 2. use global eval to evaluate the inline scripts\n *    see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function#Difference_between_Function_constructor_and_function_declaration\n *    see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval#Do_not_ever_use_eval!\n * @param tpl\n * @param baseURI\n * @stripStyles whether to strip the css links\n * @returns {{template: void | string | *, scripts: *[], entry: *}}\n */\n\nexport default function processTpl(tpl, baseURI) {\n  var scripts = [];\n  var styles = [];\n  var entry = null;\n  var moduleSupport = isModuleScriptSupported();\n  var template = tpl\n  /*\n  remove html comment first\n  */\n  .replace(HTML_COMMENT_REGEX, '').replace(LINK_TAG_REGEX, function (match) {\n    /*\n    change the css link\n    */\n    var styleType = !!match.match(STYLE_TYPE_REGEX);\n\n    if (styleType) {\n      var styleHref = match.match(STYLE_HREF_REGEX);\n      var styleIgnore = match.match(LINK_IGNORE_REGEX);\n\n      if (styleHref) {\n        var href = styleHref && styleHref[2];\n        var newHref = href;\n\n        if (href && !hasProtocol(href)) {\n          newHref = getEntirePath(href, baseURI);\n        }\n\n        if (styleIgnore) {\n          return genIgnoreAssetReplaceSymbol(newHref);\n        }\n\n        styles.push(newHref);\n        return genLinkReplaceSymbol(newHref);\n      }\n    }\n\n    var preloadOrPrefetchType = match.match(LINK_PRELOAD_OR_PREFETCH_REGEX) && match.match(LINK_HREF_REGEX) && !match.match(LINK_AS_FONT);\n\n    if (preloadOrPrefetchType) {\n      var _match$match = match.match(LINK_HREF_REGEX),\n          _match$match2 = _slicedToArray(_match$match, 3),\n          linkHref = _match$match2[2];\n\n      return genLinkReplaceSymbol(linkHref, true);\n    }\n\n    return match;\n  }).replace(STYLE_TAG_REGEX, function (match) {\n    if (STYLE_IGNORE_REGEX.test(match)) {\n      return genIgnoreAssetReplaceSymbol('style file');\n    }\n\n    return match;\n  }).replace(ALL_SCRIPT_REGEX, function (match, scriptTag) {\n    var scriptIgnore = scriptTag.match(SCRIPT_IGNORE_REGEX);\n    var moduleScriptIgnore = moduleSupport && !!scriptTag.match(SCRIPT_NO_MODULE_REGEX) || !moduleSupport && !!scriptTag.match(SCRIPT_MODULE_REGEX); // in order to keep the exec order of all javascripts\n\n    var matchedScriptTypeMatch = scriptTag.match(SCRIPT_TYPE_REGEX);\n    var matchedScriptType = matchedScriptTypeMatch && matchedScriptTypeMatch[2];\n\n    if (!isValidJavaScriptType(matchedScriptType)) {\n      return match;\n    } // if it is a external script\n\n\n    if (SCRIPT_TAG_REGEX.test(match) && scriptTag.match(SCRIPT_SRC_REGEX)) {\n      /*\n      collect scripts and replace the ref\n      */\n      var matchedScriptEntry = scriptTag.match(SCRIPT_ENTRY_REGEX);\n      var matchedScriptSrcMatch = scriptTag.match(SCRIPT_SRC_REGEX);\n      var matchedScriptSrc = matchedScriptSrcMatch && matchedScriptSrcMatch[2];\n\n      if (entry && matchedScriptEntry) {\n        throw new SyntaxError('You should not set multiply entry script!');\n      } else {\n        // append the domain while the script not have an protocol prefix\n        if (matchedScriptSrc && !hasProtocol(matchedScriptSrc)) {\n          matchedScriptSrc = getEntirePath(matchedScriptSrc, baseURI);\n        }\n\n        entry = entry || matchedScriptEntry && matchedScriptSrc;\n      }\n\n      if (scriptIgnore) {\n        return genIgnoreAssetReplaceSymbol(matchedScriptSrc || 'js file');\n      }\n\n      if (moduleScriptIgnore) {\n        return genModuleScriptReplaceSymbol(matchedScriptSrc || 'js file', moduleSupport);\n      }\n\n      if (matchedScriptSrc) {\n        var asyncScript = !!scriptTag.match(SCRIPT_ASYNC_REGEX);\n        scripts.push(asyncScript ? {\n          async: true,\n          src: matchedScriptSrc\n        } : matchedScriptSrc);\n        return genScriptReplaceSymbol(matchedScriptSrc, asyncScript);\n      }\n\n      return match;\n    } else {\n      if (scriptIgnore) {\n        return genIgnoreAssetReplaceSymbol('js file');\n      }\n\n      if (moduleScriptIgnore) {\n        return genModuleScriptReplaceSymbol('js file', moduleSupport);\n      } // if it is an inline script\n\n\n      var code = getInlineCode(match); // remove script blocks when all of these lines are comments.\n\n      var isPureCommentBlock = code.split(/[\\r\\n]+/).every(function (line) {\n        return !line.trim() || line.trim().startsWith('//');\n      });\n\n      if (!isPureCommentBlock) {\n        scripts.push(match);\n      }\n\n      return inlineScriptReplaceSymbol;\n    }\n  });\n  scripts = scripts.filter(function (script) {\n    // filter empty script\n    return !!script;\n  });\n  return {\n    template: template,\n    scripts: scripts,\n    styles: styles,\n    // set the last script as entry if have not set\n    entry: entry || scripts[scripts.length - 1]\n  };\n}"]},"metadata":{},"sourceType":"module"}