{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport { SandBoxType } from '../interfaces';\n\nfunction iter(obj, callbackFn) {\n  // eslint-disable-next-line guard-for-in, no-restricted-syntax\n  for (var prop in obj) {\n    if (obj.hasOwnProperty(prop)) {\n      callbackFn(prop);\n    }\n  }\n}\n/**\n * 基于 diff 方式实现的沙箱，用于不支持 Proxy 的低版本浏览器\n */\n\n\nvar SnapshotSandbox = /*#__PURE__*/function () {\n  function SnapshotSandbox(name) {\n    _classCallCheck(this, SnapshotSandbox);\n\n    this.sandboxRunning = true;\n    this.modifyPropsMap = {};\n    this.name = name;\n    this.proxy = window;\n    this.type = SandBoxType.Snapshot;\n  }\n\n  _createClass(SnapshotSandbox, [{\n    key: \"active\",\n    value: function active() {\n      var _this = this; // 记录当前快照\n\n\n      this.windowSnapshot = {};\n      iter(window, function (prop) {\n        _this.windowSnapshot[prop] = window[prop];\n      }); // 恢复之前的变更\n\n      Object.keys(this.modifyPropsMap).forEach(function (p) {\n        window[p] = _this.modifyPropsMap[p];\n      });\n      this.sandboxRunning = true;\n    }\n  }, {\n    key: \"inactive\",\n    value: function inactive() {\n      var _this2 = this;\n\n      this.modifyPropsMap = {};\n      iter(window, function (prop) {\n        if (window[prop] !== _this2.windowSnapshot[prop]) {\n          // 记录变更，恢复环境\n          _this2.modifyPropsMap[prop] = window[prop];\n          window[prop] = _this2.windowSnapshot[prop];\n        }\n      });\n\n      if (process.env.NODE_ENV === 'development') {\n        console.info(\"[qiankun:sandbox] \".concat(this.name, \" origin window restore...\"), Object.keys(this.modifyPropsMap));\n      }\n\n      this.sandboxRunning = false;\n    }\n  }]);\n\n  return SnapshotSandbox;\n}();\n\nexport { SnapshotSandbox as default };","map":{"version":3,"sources":["/Users/mory/Desktop/qiankun-react/master/node_modules/qiankun/es/sandbox/snapshotSandbox.js"],"names":["_classCallCheck","_createClass","SandBoxType","iter","obj","callbackFn","prop","hasOwnProperty","SnapshotSandbox","name","sandboxRunning","modifyPropsMap","proxy","window","type","Snapshot","key","value","active","_this","windowSnapshot","Object","keys","forEach","p","inactive","_this2","process","env","NODE_ENV","console","info","concat","default"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,2CAA5B;AACA,OAAOC,YAAP,MAAyB,wCAAzB;AACA,SAASC,WAAT,QAA4B,eAA5B;;AAEA,SAASC,IAAT,CAAcC,GAAd,EAAmBC,UAAnB,EAA+B;AAC7B;AACA,OAAK,IAAIC,IAAT,IAAiBF,GAAjB,EAAsB;AACpB,QAAIA,GAAG,CAACG,cAAJ,CAAmBD,IAAnB,CAAJ,EAA8B;AAC5BD,MAAAA,UAAU,CAACC,IAAD,CAAV;AACD;AACF;AACF;AACD;AACA;AACA;;;AAGA,IAAIE,eAAe,GAAG,aAAa,YAAY;AAC7C,WAASA,eAAT,CAAyBC,IAAzB,EAA+B;AAC7BT,IAAAA,eAAe,CAAC,IAAD,EAAOQ,eAAP,CAAf;;AAEA,SAAKE,cAAL,GAAsB,IAAtB;AACA,SAAKC,cAAL,GAAsB,EAAtB;AACA,SAAKF,IAAL,GAAYA,IAAZ;AACA,SAAKG,KAAL,GAAaC,MAAb;AACA,SAAKC,IAAL,GAAYZ,WAAW,CAACa,QAAxB;AACD;;AAEDd,EAAAA,YAAY,CAACO,eAAD,EAAkB,CAAC;AAC7BQ,IAAAA,GAAG,EAAE,QADwB;AAE7BC,IAAAA,KAAK,EAAE,SAASC,MAAT,GAAkB;AACvB,UAAIC,KAAK,GAAG,IAAZ,CADuB,CAGvB;;;AACA,WAAKC,cAAL,GAAsB,EAAtB;AACAjB,MAAAA,IAAI,CAACU,MAAD,EAAS,UAAUP,IAAV,EAAgB;AAC3Ba,QAAAA,KAAK,CAACC,cAAN,CAAqBd,IAArB,IAA6BO,MAAM,CAACP,IAAD,CAAnC;AACD,OAFG,CAAJ,CALuB,CAOnB;;AAEJe,MAAAA,MAAM,CAACC,IAAP,CAAY,KAAKX,cAAjB,EAAiCY,OAAjC,CAAyC,UAAUC,CAAV,EAAa;AACpDX,QAAAA,MAAM,CAACW,CAAD,CAAN,GAAYL,KAAK,CAACR,cAAN,CAAqBa,CAArB,CAAZ;AACD,OAFD;AAGA,WAAKd,cAAL,GAAsB,IAAtB;AACD;AAf4B,GAAD,EAgB3B;AACDM,IAAAA,GAAG,EAAE,UADJ;AAEDC,IAAAA,KAAK,EAAE,SAASQ,QAAT,GAAoB;AACzB,UAAIC,MAAM,GAAG,IAAb;;AAEA,WAAKf,cAAL,GAAsB,EAAtB;AACAR,MAAAA,IAAI,CAACU,MAAD,EAAS,UAAUP,IAAV,EAAgB;AAC3B,YAAIO,MAAM,CAACP,IAAD,CAAN,KAAiBoB,MAAM,CAACN,cAAP,CAAsBd,IAAtB,CAArB,EAAkD;AAChD;AACAoB,UAAAA,MAAM,CAACf,cAAP,CAAsBL,IAAtB,IAA8BO,MAAM,CAACP,IAAD,CAApC;AACAO,UAAAA,MAAM,CAACP,IAAD,CAAN,GAAeoB,MAAM,CAACN,cAAP,CAAsBd,IAAtB,CAAf;AACD;AACF,OANG,CAAJ;;AAQA,UAAIqB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CC,QAAAA,OAAO,CAACC,IAAR,CAAa,qBAAqBC,MAArB,CAA4B,KAAKvB,IAAjC,EAAuC,2BAAvC,CAAb,EAAkFY,MAAM,CAACC,IAAP,CAAY,KAAKX,cAAjB,CAAlF;AACD;;AAED,WAAKD,cAAL,GAAsB,KAAtB;AACD;AAnBA,GAhB2B,CAAlB,CAAZ;;AAsCA,SAAOF,eAAP;AACD,CAlDkC,EAAnC;;AAoDA,SAASA,eAAe,IAAIyB,OAA5B","sourcesContent":["import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport { SandBoxType } from '../interfaces';\n\nfunction iter(obj, callbackFn) {\n  // eslint-disable-next-line guard-for-in, no-restricted-syntax\n  for (var prop in obj) {\n    if (obj.hasOwnProperty(prop)) {\n      callbackFn(prop);\n    }\n  }\n}\n/**\n * 基于 diff 方式实现的沙箱，用于不支持 Proxy 的低版本浏览器\n */\n\n\nvar SnapshotSandbox = /*#__PURE__*/function () {\n  function SnapshotSandbox(name) {\n    _classCallCheck(this, SnapshotSandbox);\n\n    this.sandboxRunning = true;\n    this.modifyPropsMap = {};\n    this.name = name;\n    this.proxy = window;\n    this.type = SandBoxType.Snapshot;\n  }\n\n  _createClass(SnapshotSandbox, [{\n    key: \"active\",\n    value: function active() {\n      var _this = this;\n\n      // 记录当前快照\n      this.windowSnapshot = {};\n      iter(window, function (prop) {\n        _this.windowSnapshot[prop] = window[prop];\n      }); // 恢复之前的变更\n\n      Object.keys(this.modifyPropsMap).forEach(function (p) {\n        window[p] = _this.modifyPropsMap[p];\n      });\n      this.sandboxRunning = true;\n    }\n  }, {\n    key: \"inactive\",\n    value: function inactive() {\n      var _this2 = this;\n\n      this.modifyPropsMap = {};\n      iter(window, function (prop) {\n        if (window[prop] !== _this2.windowSnapshot[prop]) {\n          // 记录变更，恢复环境\n          _this2.modifyPropsMap[prop] = window[prop];\n          window[prop] = _this2.windowSnapshot[prop];\n        }\n      });\n\n      if (process.env.NODE_ENV === 'development') {\n        console.info(\"[qiankun:sandbox] \".concat(this.name, \" origin window restore...\"), Object.keys(this.modifyPropsMap));\n      }\n\n      this.sandboxRunning = false;\n    }\n  }]);\n\n  return SnapshotSandbox;\n}();\n\nexport { SnapshotSandbox as default };"]},"metadata":{},"sourceType":"module"}