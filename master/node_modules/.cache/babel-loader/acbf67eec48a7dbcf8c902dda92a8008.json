{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport { SandBoxType } from '../../interfaces';\nimport { getTargetValue } from '../common';\n\nfunction isPropConfigurable(target, prop) {\n  var descriptor = Object.getOwnPropertyDescriptor(target, prop);\n  return descriptor ? descriptor.configurable : true;\n}\n\nfunction setWindowProp(prop, value, toDelete) {\n  if (value === undefined && toDelete) {\n    delete window[prop];\n  } else if (isPropConfigurable(window, prop) && _typeof(prop) !== 'symbol') {\n    Object.defineProperty(window, prop, {\n      writable: true,\n      configurable: true\n    });\n    window[prop] = value;\n  }\n}\n/**\n * 基于 Proxy 实现的沙箱\n * TODO: 为了兼容性 singular 模式下依旧使用该沙箱，等新沙箱稳定之后再切换\n */\n\n\nvar SingularProxySandbox = /*#__PURE__*/function () {\n  function SingularProxySandbox(name) {\n    var _this = this;\n\n    _classCallCheck(this, SingularProxySandbox);\n    /** 沙箱期间新增的全局变量 */\n\n\n    this.addedPropsMapInSandbox = new Map();\n    /** 沙箱期间更新的全局变量 */\n\n    this.modifiedPropsOriginalValueMapInSandbox = new Map();\n    /** 持续记录更新的(新增和修改的)全局变量的 map，用于在任意时刻做 snapshot */\n\n    this.currentUpdatedPropsValueMap = new Map();\n    this.sandboxRunning = true;\n    this.latestSetProp = null;\n    this.name = name;\n    this.type = SandBoxType.LegacyProxy;\n    var addedPropsMapInSandbox = this.addedPropsMapInSandbox,\n        modifiedPropsOriginalValueMapInSandbox = this.modifiedPropsOriginalValueMapInSandbox,\n        currentUpdatedPropsValueMap = this.currentUpdatedPropsValueMap;\n    var rawWindow = window;\n    var fakeWindow = Object.create(null);\n    var proxy = new Proxy(fakeWindow, {\n      set: function set(_, p, value) {\n        if (_this.sandboxRunning) {\n          if (!rawWindow.hasOwnProperty(p)) {\n            addedPropsMapInSandbox.set(p, value);\n          } else if (!modifiedPropsOriginalValueMapInSandbox.has(p)) {\n            // 如果当前 window 对象存在该属性，且 record map 中未记录过，则记录该属性初始值\n            var originalValue = rawWindow[p];\n            modifiedPropsOriginalValueMapInSandbox.set(p, originalValue);\n          }\n\n          currentUpdatedPropsValueMap.set(p, value); // 必须重新设置 window 对象保证下次 get 时能拿到已更新的数据\n          // eslint-disable-next-line no-param-reassign\n\n          rawWindow[p] = value;\n          _this.latestSetProp = p;\n          return true;\n        }\n\n        if (process.env.NODE_ENV === 'development') {\n          console.warn(\"[qiankun] Set window.\".concat(p.toString(), \" while sandbox destroyed or inactive in \").concat(name, \"!\"));\n        } // 在 strict-mode 下，Proxy 的 handler.set 返回 false 会抛出 TypeError，在沙箱卸载的情况下应该忽略错误\n\n\n        return true;\n      },\n      get: function get(_, p) {\n        // avoid who using window.window or window.self to escape the sandbox environment to touch the really window\n        // or use window.top to check if an iframe context\n        // see https://github.com/eligrey/FileSaver.js/blob/master/src/FileSaver.js#L13\n        if (p === 'top' || p === 'parent' || p === 'window' || p === 'self') {\n          return proxy;\n        }\n\n        var value = rawWindow[p];\n        return getTargetValue(rawWindow, value);\n      },\n      // trap in operator\n      // see https://github.com/styled-components/styled-components/blob/master/packages/styled-components/src/constants.js#L12\n      has: function has(_, p) {\n        return p in rawWindow;\n      },\n      getOwnPropertyDescriptor: function getOwnPropertyDescriptor(_, p) {\n        var descriptor = Object.getOwnPropertyDescriptor(rawWindow, p); // A property cannot be reported as non-configurable, if it does not exists as an own property of the target object\n\n        if (descriptor && !descriptor.configurable) {\n          descriptor.configurable = true;\n        }\n\n        return descriptor;\n      }\n    });\n    this.proxy = proxy;\n  }\n\n  _createClass(SingularProxySandbox, [{\n    key: \"active\",\n    value: function active() {\n      if (!this.sandboxRunning) {\n        this.currentUpdatedPropsValueMap.forEach(function (v, p) {\n          return setWindowProp(p, v);\n        });\n      }\n\n      this.sandboxRunning = true;\n    }\n  }, {\n    key: \"inactive\",\n    value: function inactive() {\n      if (process.env.NODE_ENV === 'development') {\n        console.info(\"[qiankun:sandbox] \".concat(this.name, \" modified global properties restore...\"), [].concat(_toConsumableArray(this.addedPropsMapInSandbox.keys()), _toConsumableArray(this.modifiedPropsOriginalValueMapInSandbox.keys())));\n      } // renderSandboxSnapshot = snapshot(currentUpdatedPropsValueMapForSnapshot);\n      // restore global props to initial snapshot\n\n\n      this.modifiedPropsOriginalValueMapInSandbox.forEach(function (v, p) {\n        return setWindowProp(p, v);\n      });\n      this.addedPropsMapInSandbox.forEach(function (_, p) {\n        return setWindowProp(p, undefined, true);\n      });\n      this.sandboxRunning = false;\n    }\n  }]);\n\n  return SingularProxySandbox;\n}();\n\nexport { SingularProxySandbox as default };","map":{"version":3,"sources":["/Users/mory/Desktop/qiankun-react/master/node_modules/qiankun/es/sandbox/legacy/sandbox.js"],"names":["_toConsumableArray","_classCallCheck","_createClass","_typeof","SandBoxType","getTargetValue","isPropConfigurable","target","prop","descriptor","Object","getOwnPropertyDescriptor","configurable","setWindowProp","value","toDelete","undefined","window","defineProperty","writable","SingularProxySandbox","name","_this","addedPropsMapInSandbox","Map","modifiedPropsOriginalValueMapInSandbox","currentUpdatedPropsValueMap","sandboxRunning","latestSetProp","type","LegacyProxy","rawWindow","fakeWindow","create","proxy","Proxy","set","_","p","hasOwnProperty","has","originalValue","process","env","NODE_ENV","console","warn","concat","toString","get","key","active","forEach","v","inactive","info","keys","default"],"mappings":"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","sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport { SandBoxType } from '../../interfaces';\nimport { getTargetValue } from '../common';\n\nfunction isPropConfigurable(target, prop) {\n  var descriptor = Object.getOwnPropertyDescriptor(target, prop);\n  return descriptor ? descriptor.configurable : true;\n}\n\nfunction setWindowProp(prop, value, toDelete) {\n  if (value === undefined && toDelete) {\n    delete window[prop];\n  } else if (isPropConfigurable(window, prop) && _typeof(prop) !== 'symbol') {\n    Object.defineProperty(window, prop, {\n      writable: true,\n      configurable: true\n    });\n    window[prop] = value;\n  }\n}\n/**\n * 基于 Proxy 实现的沙箱\n * TODO: 为了兼容性 singular 模式下依旧使用该沙箱，等新沙箱稳定之后再切换\n */\n\n\nvar SingularProxySandbox = /*#__PURE__*/function () {\n  function SingularProxySandbox(name) {\n    var _this = this;\n\n    _classCallCheck(this, SingularProxySandbox);\n\n    /** 沙箱期间新增的全局变量 */\n    this.addedPropsMapInSandbox = new Map();\n    /** 沙箱期间更新的全局变量 */\n\n    this.modifiedPropsOriginalValueMapInSandbox = new Map();\n    /** 持续记录更新的(新增和修改的)全局变量的 map，用于在任意时刻做 snapshot */\n\n    this.currentUpdatedPropsValueMap = new Map();\n    this.sandboxRunning = true;\n    this.latestSetProp = null;\n    this.name = name;\n    this.type = SandBoxType.LegacyProxy;\n    var addedPropsMapInSandbox = this.addedPropsMapInSandbox,\n        modifiedPropsOriginalValueMapInSandbox = this.modifiedPropsOriginalValueMapInSandbox,\n        currentUpdatedPropsValueMap = this.currentUpdatedPropsValueMap;\n    var rawWindow = window;\n    var fakeWindow = Object.create(null);\n    var proxy = new Proxy(fakeWindow, {\n      set: function set(_, p, value) {\n        if (_this.sandboxRunning) {\n          if (!rawWindow.hasOwnProperty(p)) {\n            addedPropsMapInSandbox.set(p, value);\n          } else if (!modifiedPropsOriginalValueMapInSandbox.has(p)) {\n            // 如果当前 window 对象存在该属性，且 record map 中未记录过，则记录该属性初始值\n            var originalValue = rawWindow[p];\n            modifiedPropsOriginalValueMapInSandbox.set(p, originalValue);\n          }\n\n          currentUpdatedPropsValueMap.set(p, value); // 必须重新设置 window 对象保证下次 get 时能拿到已更新的数据\n          // eslint-disable-next-line no-param-reassign\n\n          rawWindow[p] = value;\n          _this.latestSetProp = p;\n          return true;\n        }\n\n        if (process.env.NODE_ENV === 'development') {\n          console.warn(\"[qiankun] Set window.\".concat(p.toString(), \" while sandbox destroyed or inactive in \").concat(name, \"!\"));\n        } // 在 strict-mode 下，Proxy 的 handler.set 返回 false 会抛出 TypeError，在沙箱卸载的情况下应该忽略错误\n\n\n        return true;\n      },\n      get: function get(_, p) {\n        // avoid who using window.window or window.self to escape the sandbox environment to touch the really window\n        // or use window.top to check if an iframe context\n        // see https://github.com/eligrey/FileSaver.js/blob/master/src/FileSaver.js#L13\n        if (p === 'top' || p === 'parent' || p === 'window' || p === 'self') {\n          return proxy;\n        }\n\n        var value = rawWindow[p];\n        return getTargetValue(rawWindow, value);\n      },\n      // trap in operator\n      // see https://github.com/styled-components/styled-components/blob/master/packages/styled-components/src/constants.js#L12\n      has: function has(_, p) {\n        return p in rawWindow;\n      },\n      getOwnPropertyDescriptor: function getOwnPropertyDescriptor(_, p) {\n        var descriptor = Object.getOwnPropertyDescriptor(rawWindow, p); // A property cannot be reported as non-configurable, if it does not exists as an own property of the target object\n\n        if (descriptor && !descriptor.configurable) {\n          descriptor.configurable = true;\n        }\n\n        return descriptor;\n      }\n    });\n    this.proxy = proxy;\n  }\n\n  _createClass(SingularProxySandbox, [{\n    key: \"active\",\n    value: function active() {\n      if (!this.sandboxRunning) {\n        this.currentUpdatedPropsValueMap.forEach(function (v, p) {\n          return setWindowProp(p, v);\n        });\n      }\n\n      this.sandboxRunning = true;\n    }\n  }, {\n    key: \"inactive\",\n    value: function inactive() {\n      if (process.env.NODE_ENV === 'development') {\n        console.info(\"[qiankun:sandbox] \".concat(this.name, \" modified global properties restore...\"), [].concat(_toConsumableArray(this.addedPropsMapInSandbox.keys()), _toConsumableArray(this.modifiedPropsOriginalValueMapInSandbox.keys())));\n      } // renderSandboxSnapshot = snapshot(currentUpdatedPropsValueMapForSnapshot);\n      // restore global props to initial snapshot\n\n\n      this.modifiedPropsOriginalValueMapInSandbox.forEach(function (v, p) {\n        return setWindowProp(p, v);\n      });\n      this.addedPropsMapInSandbox.forEach(function (_, p) {\n        return setWindowProp(p, undefined, true);\n      });\n      this.sandboxRunning = false;\n    }\n  }]);\n\n  return SingularProxySandbox;\n}();\n\nexport { SingularProxySandbox as default };"]},"metadata":{},"sourceType":"module"}