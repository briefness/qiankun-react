{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport { SandBoxType } from '../interfaces';\nimport { nextTick } from '../utils';\nimport { getTargetValue, setCurrentRunningSandboxProxy } from './common';\n/**\n * fastest(at most time) unique array method\n * @see https://jsperf.com/array-filter-unique/30\n */\n\nfunction uniq(array) {\n  return array.filter(function filter(element) {\n    return element in this ? false : this[element] = true;\n  }, Object.create(null));\n} // zone.js will overwrite Object.defineProperty\n\n\nvar rawObjectDefineProperty = Object.defineProperty;\nvar variableWhiteListInDev = process.env.NODE_ENV === 'development' || window.__QIANKUN_DEVELOPMENT__ ? [// for react hot reload\n// see https://github.com/facebook/create-react-app/blob/66bf7dfc43350249e2f09d138a20840dae8a0a4a/packages/react-error-overlay/src/index.js#L180\n'__REACT_ERROR_OVERLAY_GLOBAL_HOOK__'] : []; // who could escape the sandbox\n\nvar variableWhiteList = [// FIXME System.js used a indirect call with eval, which would make it scope escape to global\n// To make System.js works well, we write it back to global window temporary\n// see https://github.com/systemjs/systemjs/blob/457f5b7e8af6bd120a279540477552a07d5de086/src/evaluate.js#L106\n'System', // see https://github.com/systemjs/systemjs/blob/457f5b7e8af6bd120a279540477552a07d5de086/src/instantiate.js#L357\n'__cjsWrapper'].concat(variableWhiteListInDev);\n/*\n variables who are impossible to be overwrite need to be escaped from proxy sandbox for performance reasons\n */\n\nvar unscopables = {\n  undefined: true,\n  Array: true,\n  Object: true,\n  String: true,\n  Boolean: true,\n  Math: true,\n  Number: true,\n  Symbol: true,\n  parseFloat: true,\n  Float32Array: true\n};\n\nfunction createFakeWindow(global) {\n  // map always has the fastest performance in has check scenario\n  // see https://jsperf.com/array-indexof-vs-set-has/23\n  var propertiesWithGetter = new Map();\n  var fakeWindow = {};\n  /*\n   copy the non-configurable property of global to fakeWindow\n   see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/getOwnPropertyDescriptor\n   > A property cannot be reported as non-configurable, if it does not exists as an own property of the target object or if it exists as a configurable own property of the target object.\n   */\n\n  Object.getOwnPropertyNames(global).filter(function (p) {\n    var descriptor = Object.getOwnPropertyDescriptor(global, p);\n    return !(descriptor === null || descriptor === void 0 ? void 0 : descriptor.configurable);\n  }).forEach(function (p) {\n    var descriptor = Object.getOwnPropertyDescriptor(global, p);\n\n    if (descriptor) {\n      var hasGetter = Object.prototype.hasOwnProperty.call(descriptor, 'get');\n      /*\n       make top/self/window property configurable and writable, otherwise it will cause TypeError while get trap return.\n       see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/get\n       > The value reported for a property must be the same as the value of the corresponding target object property if the target object property is a non-writable, non-configurable data property.\n       */\n\n      if (p === 'top' || p === 'parent' || p === 'self' || p === 'window' || process.env.NODE_ENV === 'test' && (p === 'mockTop' || p === 'mockSafariTop')) {\n        descriptor.configurable = true;\n        /*\n         The descriptor of window.window/window.top/window.self in Safari/FF are accessor descriptors, we need to avoid adding a data descriptor while it was\n         Example:\n          Safari/FF: Object.getOwnPropertyDescriptor(window, 'top') -> {get: function, set: undefined, enumerable: true, configurable: false}\n          Chrome: Object.getOwnPropertyDescriptor(window, 'top') -> {value: Window, writable: false, enumerable: true, configurable: false}\n         */\n\n        if (!hasGetter) {\n          descriptor.writable = true;\n        }\n      }\n\n      if (hasGetter) propertiesWithGetter.set(p, true); // freeze the descriptor to avoid being modified by zone.js\n      // see https://github.com/angular/zone.js/blob/a5fe09b0fac27ac5df1fa746042f96f05ccb6a00/lib/browser/define-property.ts#L71\n\n      rawObjectDefineProperty(fakeWindow, p, Object.freeze(descriptor));\n    }\n  });\n  return {\n    fakeWindow: fakeWindow,\n    propertiesWithGetter: propertiesWithGetter\n  };\n}\n\nvar activeSandboxCount = 0;\n/**\n * 基于 Proxy 实现的沙箱\n */\n\nvar ProxySandbox = /*#__PURE__*/function () {\n  function ProxySandbox(name) {\n    var _this = this;\n\n    _classCallCheck(this, ProxySandbox);\n    /** window 值变更记录 */\n\n\n    this.updatedValueSet = new Set();\n    this.sandboxRunning = true;\n    this.latestSetProp = null;\n    this.name = name;\n    this.type = SandBoxType.Proxy;\n    var updatedValueSet = this.updatedValueSet;\n    var rawWindow = window;\n\n    var _createFakeWindow = createFakeWindow(rawWindow),\n        fakeWindow = _createFakeWindow.fakeWindow,\n        propertiesWithGetter = _createFakeWindow.propertiesWithGetter;\n\n    var descriptorTargetMap = new Map();\n\n    var hasOwnProperty = function hasOwnProperty(key) {\n      return fakeWindow.hasOwnProperty(key) || rawWindow.hasOwnProperty(key);\n    };\n\n    var proxy = new Proxy(fakeWindow, {\n      set: function set(target, p, value) {\n        if (_this.sandboxRunning) {\n          // We must kept its description while the property existed in rawWindow before\n          if (!target.hasOwnProperty(p) && rawWindow.hasOwnProperty(p)) {\n            var descriptor = Object.getOwnPropertyDescriptor(rawWindow, p);\n            var writable = descriptor.writable,\n                configurable = descriptor.configurable,\n                enumerable = descriptor.enumerable;\n\n            if (writable) {\n              Object.defineProperty(target, p, {\n                configurable: configurable,\n                enumerable: enumerable,\n                writable: writable,\n                value: value\n              });\n            }\n          } else {\n            // @ts-ignore\n            target[p] = value;\n          }\n\n          if (variableWhiteList.indexOf(p) !== -1) {\n            // @ts-ignore\n            rawWindow[p] = value;\n          }\n\n          updatedValueSet.add(p);\n          _this.latestSetProp = p;\n          return true;\n        }\n\n        if (process.env.NODE_ENV === 'development') {\n          console.warn(\"[qiankun] Set window.\".concat(p.toString(), \" while sandbox destroyed or inactive in \").concat(name, \"!\"));\n        } // 在 strict-mode 下，Proxy 的 handler.set 返回 false 会抛出 TypeError，在沙箱卸载的情况下应该忽略错误\n\n\n        return true;\n      },\n      get: function get(target, p) {\n        if (p === Symbol.unscopables) return unscopables; // avoid who using window.window or window.self to escape the sandbox environment to touch the really window\n        // see https://github.com/eligrey/FileSaver.js/blob/master/src/FileSaver.js#L13\n\n        if (p === 'window' || p === 'self') {\n          return proxy;\n        }\n\n        if (p === 'top' || p === 'parent' || process.env.NODE_ENV === 'test' && (p === 'mockTop' || p === 'mockSafariTop')) {\n          // if your master app in an iframe context, allow these props escape the sandbox\n          if (rawWindow === rawWindow.parent) {\n            return proxy;\n          }\n\n          return rawWindow[p];\n        } // proxy.hasOwnProperty would invoke getter firstly, then its value represented as rawWindow.hasOwnProperty\n\n\n        if (p === 'hasOwnProperty') {\n          return hasOwnProperty;\n        } // mark the symbol to document while accessing as document.createElement could know is invoked by which sandbox for dynamic append patcher\n\n\n        if (p === 'document' || p === 'eval') {\n          setCurrentRunningSandboxProxy(proxy); // FIXME if you have any other good ideas\n          // remove the mark in next tick, thus we can identify whether it in micro app or not\n          // this approach is just a workaround, it could not cover all complex cases, such as the micro app runs in the same task context with master in some case\n\n          nextTick(function () {\n            return setCurrentRunningSandboxProxy(null);\n          });\n\n          switch (p) {\n            case 'document':\n              return document;\n\n            case 'eval':\n              // eslint-disable-next-line no-eval\n              return eval;\n            // no default\n          }\n        } // eslint-disable-next-line no-nested-ternary\n\n\n        var value = propertiesWithGetter.has(p) ? rawWindow[p] : p in target ? target[p] : rawWindow[p];\n        return getTargetValue(rawWindow, value);\n      },\n      // trap in operator\n      // see https://github.com/styled-components/styled-components/blob/master/packages/styled-components/src/constants.js#L12\n      has: function has(target, p) {\n        return p in unscopables || p in target || p in rawWindow;\n      },\n      getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, p) {\n        /*\n         as the descriptor of top/self/window/mockTop in raw window are configurable but not in proxy target, we need to get it from target to avoid TypeError\n         see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/getOwnPropertyDescriptor\n         > A property cannot be reported as non-configurable, if it does not exists as an own property of the target object or if it exists as a configurable own property of the target object.\n         */\n        if (target.hasOwnProperty(p)) {\n          var descriptor = Object.getOwnPropertyDescriptor(target, p);\n          descriptorTargetMap.set(p, 'target');\n          return descriptor;\n        }\n\n        if (rawWindow.hasOwnProperty(p)) {\n          var _descriptor = Object.getOwnPropertyDescriptor(rawWindow, p);\n\n          descriptorTargetMap.set(p, 'rawWindow'); // A property cannot be reported as non-configurable, if it does not exists as an own property of the target object\n\n          if (_descriptor && !_descriptor.configurable) {\n            _descriptor.configurable = true;\n          }\n\n          return _descriptor;\n        }\n\n        return undefined;\n      },\n      // trap to support iterator with sandbox\n      ownKeys: function ownKeys(target) {\n        var keys = uniq(Reflect.ownKeys(rawWindow).concat(Reflect.ownKeys(target)));\n        return keys;\n      },\n      defineProperty: function defineProperty(target, p, attributes) {\n        var from = descriptorTargetMap.get(p);\n        /*\n         Descriptor must be defined to native window while it comes from native window via Object.getOwnPropertyDescriptor(window, p),\n         otherwise it would cause a TypeError with illegal invocation.\n         */\n\n        switch (from) {\n          case 'rawWindow':\n            return Reflect.defineProperty(rawWindow, p, attributes);\n\n          default:\n            return Reflect.defineProperty(target, p, attributes);\n        }\n      },\n      deleteProperty: function deleteProperty(target, p) {\n        if (target.hasOwnProperty(p)) {\n          // @ts-ignore\n          delete target[p];\n          updatedValueSet.delete(p);\n          return true;\n        }\n\n        return true;\n      }\n    });\n    this.proxy = proxy;\n  }\n\n  _createClass(ProxySandbox, [{\n    key: \"active\",\n    value: function active() {\n      if (!this.sandboxRunning) activeSandboxCount++;\n      this.sandboxRunning = true;\n    }\n  }, {\n    key: \"inactive\",\n    value: function inactive() {\n      var _this2 = this;\n\n      if (process.env.NODE_ENV === 'development') {\n        console.info(\"[qiankun:sandbox] \".concat(this.name, \" modified global properties restore...\"), _toConsumableArray(this.updatedValueSet.keys()));\n      }\n\n      if (--activeSandboxCount === 0) {\n        variableWhiteList.forEach(function (p) {\n          if (_this2.proxy.hasOwnProperty(p)) {\n            // @ts-ignore\n            delete window[p];\n          }\n        });\n      }\n\n      this.sandboxRunning = false;\n    }\n  }]);\n\n  return ProxySandbox;\n}();\n\nexport { ProxySandbox as default };","map":{"version":3,"sources":["/Users/mory/Desktop/qiankun-react/master/node_modules/qiankun/es/sandbox/proxySandbox.js"],"names":["_toConsumableArray","_classCallCheck","_createClass","SandBoxType","nextTick","getTargetValue","setCurrentRunningSandboxProxy","uniq","array","filter","element","Object","create","rawObjectDefineProperty","defineProperty","variableWhiteListInDev","process","env","NODE_ENV","window","__QIANKUN_DEVELOPMENT__","variableWhiteList","concat","unscopables","undefined","Array","String","Boolean","Math","Number","Symbol","parseFloat","Float32Array","createFakeWindow","global","propertiesWithGetter","Map","fakeWindow","getOwnPropertyNames","p","descriptor","getOwnPropertyDescriptor","configurable","forEach","hasGetter","prototype","hasOwnProperty","call","writable","set","freeze","activeSandboxCount","ProxySandbox","name","_this","updatedValueSet","Set","sandboxRunning","latestSetProp","type","Proxy","rawWindow","_createFakeWindow","descriptorTargetMap","key","proxy","target","value","enumerable","indexOf","add","console","warn","toString","get","parent","document","eval","has","_descriptor","ownKeys","keys","Reflect","attributes","from","deleteProperty","delete","active","inactive","_this2","info","default"],"mappings":"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","sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport { SandBoxType } from '../interfaces';\nimport { nextTick } from '../utils';\nimport { getTargetValue, setCurrentRunningSandboxProxy } from './common';\n/**\n * fastest(at most time) unique array method\n * @see https://jsperf.com/array-filter-unique/30\n */\n\nfunction uniq(array) {\n  return array.filter(function filter(element) {\n    return element in this ? false : this[element] = true;\n  }, Object.create(null));\n} // zone.js will overwrite Object.defineProperty\n\n\nvar rawObjectDefineProperty = Object.defineProperty;\nvar variableWhiteListInDev = process.env.NODE_ENV === 'development' || window.__QIANKUN_DEVELOPMENT__ ? [// for react hot reload\n// see https://github.com/facebook/create-react-app/blob/66bf7dfc43350249e2f09d138a20840dae8a0a4a/packages/react-error-overlay/src/index.js#L180\n'__REACT_ERROR_OVERLAY_GLOBAL_HOOK__'] : []; // who could escape the sandbox\n\nvar variableWhiteList = [// FIXME System.js used a indirect call with eval, which would make it scope escape to global\n// To make System.js works well, we write it back to global window temporary\n// see https://github.com/systemjs/systemjs/blob/457f5b7e8af6bd120a279540477552a07d5de086/src/evaluate.js#L106\n'System', // see https://github.com/systemjs/systemjs/blob/457f5b7e8af6bd120a279540477552a07d5de086/src/instantiate.js#L357\n'__cjsWrapper'].concat(variableWhiteListInDev);\n/*\n variables who are impossible to be overwrite need to be escaped from proxy sandbox for performance reasons\n */\n\nvar unscopables = {\n  undefined: true,\n  Array: true,\n  Object: true,\n  String: true,\n  Boolean: true,\n  Math: true,\n  Number: true,\n  Symbol: true,\n  parseFloat: true,\n  Float32Array: true\n};\n\nfunction createFakeWindow(global) {\n  // map always has the fastest performance in has check scenario\n  // see https://jsperf.com/array-indexof-vs-set-has/23\n  var propertiesWithGetter = new Map();\n  var fakeWindow = {};\n  /*\n   copy the non-configurable property of global to fakeWindow\n   see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/getOwnPropertyDescriptor\n   > A property cannot be reported as non-configurable, if it does not exists as an own property of the target object or if it exists as a configurable own property of the target object.\n   */\n\n  Object.getOwnPropertyNames(global).filter(function (p) {\n    var descriptor = Object.getOwnPropertyDescriptor(global, p);\n    return !(descriptor === null || descriptor === void 0 ? void 0 : descriptor.configurable);\n  }).forEach(function (p) {\n    var descriptor = Object.getOwnPropertyDescriptor(global, p);\n\n    if (descriptor) {\n      var hasGetter = Object.prototype.hasOwnProperty.call(descriptor, 'get');\n      /*\n       make top/self/window property configurable and writable, otherwise it will cause TypeError while get trap return.\n       see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/get\n       > The value reported for a property must be the same as the value of the corresponding target object property if the target object property is a non-writable, non-configurable data property.\n       */\n\n      if (p === 'top' || p === 'parent' || p === 'self' || p === 'window' || process.env.NODE_ENV === 'test' && (p === 'mockTop' || p === 'mockSafariTop')) {\n        descriptor.configurable = true;\n        /*\n         The descriptor of window.window/window.top/window.self in Safari/FF are accessor descriptors, we need to avoid adding a data descriptor while it was\n         Example:\n          Safari/FF: Object.getOwnPropertyDescriptor(window, 'top') -> {get: function, set: undefined, enumerable: true, configurable: false}\n          Chrome: Object.getOwnPropertyDescriptor(window, 'top') -> {value: Window, writable: false, enumerable: true, configurable: false}\n         */\n\n        if (!hasGetter) {\n          descriptor.writable = true;\n        }\n      }\n\n      if (hasGetter) propertiesWithGetter.set(p, true); // freeze the descriptor to avoid being modified by zone.js\n      // see https://github.com/angular/zone.js/blob/a5fe09b0fac27ac5df1fa746042f96f05ccb6a00/lib/browser/define-property.ts#L71\n\n      rawObjectDefineProperty(fakeWindow, p, Object.freeze(descriptor));\n    }\n  });\n  return {\n    fakeWindow: fakeWindow,\n    propertiesWithGetter: propertiesWithGetter\n  };\n}\n\nvar activeSandboxCount = 0;\n/**\n * 基于 Proxy 实现的沙箱\n */\n\nvar ProxySandbox = /*#__PURE__*/function () {\n  function ProxySandbox(name) {\n    var _this = this;\n\n    _classCallCheck(this, ProxySandbox);\n\n    /** window 值变更记录 */\n    this.updatedValueSet = new Set();\n    this.sandboxRunning = true;\n    this.latestSetProp = null;\n    this.name = name;\n    this.type = SandBoxType.Proxy;\n    var updatedValueSet = this.updatedValueSet;\n    var rawWindow = window;\n\n    var _createFakeWindow = createFakeWindow(rawWindow),\n        fakeWindow = _createFakeWindow.fakeWindow,\n        propertiesWithGetter = _createFakeWindow.propertiesWithGetter;\n\n    var descriptorTargetMap = new Map();\n\n    var hasOwnProperty = function hasOwnProperty(key) {\n      return fakeWindow.hasOwnProperty(key) || rawWindow.hasOwnProperty(key);\n    };\n\n    var proxy = new Proxy(fakeWindow, {\n      set: function set(target, p, value) {\n        if (_this.sandboxRunning) {\n          // We must kept its description while the property existed in rawWindow before\n          if (!target.hasOwnProperty(p) && rawWindow.hasOwnProperty(p)) {\n            var descriptor = Object.getOwnPropertyDescriptor(rawWindow, p);\n            var writable = descriptor.writable,\n                configurable = descriptor.configurable,\n                enumerable = descriptor.enumerable;\n\n            if (writable) {\n              Object.defineProperty(target, p, {\n                configurable: configurable,\n                enumerable: enumerable,\n                writable: writable,\n                value: value\n              });\n            }\n          } else {\n            // @ts-ignore\n            target[p] = value;\n          }\n\n          if (variableWhiteList.indexOf(p) !== -1) {\n            // @ts-ignore\n            rawWindow[p] = value;\n          }\n\n          updatedValueSet.add(p);\n          _this.latestSetProp = p;\n          return true;\n        }\n\n        if (process.env.NODE_ENV === 'development') {\n          console.warn(\"[qiankun] Set window.\".concat(p.toString(), \" while sandbox destroyed or inactive in \").concat(name, \"!\"));\n        } // 在 strict-mode 下，Proxy 的 handler.set 返回 false 会抛出 TypeError，在沙箱卸载的情况下应该忽略错误\n\n\n        return true;\n      },\n      get: function get(target, p) {\n        if (p === Symbol.unscopables) return unscopables; // avoid who using window.window or window.self to escape the sandbox environment to touch the really window\n        // see https://github.com/eligrey/FileSaver.js/blob/master/src/FileSaver.js#L13\n\n        if (p === 'window' || p === 'self') {\n          return proxy;\n        }\n\n        if (p === 'top' || p === 'parent' || process.env.NODE_ENV === 'test' && (p === 'mockTop' || p === 'mockSafariTop')) {\n          // if your master app in an iframe context, allow these props escape the sandbox\n          if (rawWindow === rawWindow.parent) {\n            return proxy;\n          }\n\n          return rawWindow[p];\n        } // proxy.hasOwnProperty would invoke getter firstly, then its value represented as rawWindow.hasOwnProperty\n\n\n        if (p === 'hasOwnProperty') {\n          return hasOwnProperty;\n        } // mark the symbol to document while accessing as document.createElement could know is invoked by which sandbox for dynamic append patcher\n\n\n        if (p === 'document' || p === 'eval') {\n          setCurrentRunningSandboxProxy(proxy); // FIXME if you have any other good ideas\n          // remove the mark in next tick, thus we can identify whether it in micro app or not\n          // this approach is just a workaround, it could not cover all complex cases, such as the micro app runs in the same task context with master in some case\n\n          nextTick(function () {\n            return setCurrentRunningSandboxProxy(null);\n          });\n\n          switch (p) {\n            case 'document':\n              return document;\n\n            case 'eval':\n              // eslint-disable-next-line no-eval\n              return eval;\n            // no default\n          }\n        } // eslint-disable-next-line no-nested-ternary\n\n\n        var value = propertiesWithGetter.has(p) ? rawWindow[p] : p in target ? target[p] : rawWindow[p];\n        return getTargetValue(rawWindow, value);\n      },\n      // trap in operator\n      // see https://github.com/styled-components/styled-components/blob/master/packages/styled-components/src/constants.js#L12\n      has: function has(target, p) {\n        return p in unscopables || p in target || p in rawWindow;\n      },\n      getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, p) {\n        /*\n         as the descriptor of top/self/window/mockTop in raw window are configurable but not in proxy target, we need to get it from target to avoid TypeError\n         see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/getOwnPropertyDescriptor\n         > A property cannot be reported as non-configurable, if it does not exists as an own property of the target object or if it exists as a configurable own property of the target object.\n         */\n        if (target.hasOwnProperty(p)) {\n          var descriptor = Object.getOwnPropertyDescriptor(target, p);\n          descriptorTargetMap.set(p, 'target');\n          return descriptor;\n        }\n\n        if (rawWindow.hasOwnProperty(p)) {\n          var _descriptor = Object.getOwnPropertyDescriptor(rawWindow, p);\n\n          descriptorTargetMap.set(p, 'rawWindow'); // A property cannot be reported as non-configurable, if it does not exists as an own property of the target object\n\n          if (_descriptor && !_descriptor.configurable) {\n            _descriptor.configurable = true;\n          }\n\n          return _descriptor;\n        }\n\n        return undefined;\n      },\n      // trap to support iterator with sandbox\n      ownKeys: function ownKeys(target) {\n        var keys = uniq(Reflect.ownKeys(rawWindow).concat(Reflect.ownKeys(target)));\n        return keys;\n      },\n      defineProperty: function defineProperty(target, p, attributes) {\n        var from = descriptorTargetMap.get(p);\n        /*\n         Descriptor must be defined to native window while it comes from native window via Object.getOwnPropertyDescriptor(window, p),\n         otherwise it would cause a TypeError with illegal invocation.\n         */\n\n        switch (from) {\n          case 'rawWindow':\n            return Reflect.defineProperty(rawWindow, p, attributes);\n\n          default:\n            return Reflect.defineProperty(target, p, attributes);\n        }\n      },\n      deleteProperty: function deleteProperty(target, p) {\n        if (target.hasOwnProperty(p)) {\n          // @ts-ignore\n          delete target[p];\n          updatedValueSet.delete(p);\n          return true;\n        }\n\n        return true;\n      }\n    });\n    this.proxy = proxy;\n  }\n\n  _createClass(ProxySandbox, [{\n    key: \"active\",\n    value: function active() {\n      if (!this.sandboxRunning) activeSandboxCount++;\n      this.sandboxRunning = true;\n    }\n  }, {\n    key: \"inactive\",\n    value: function inactive() {\n      var _this2 = this;\n\n      if (process.env.NODE_ENV === 'development') {\n        console.info(\"[qiankun:sandbox] \".concat(this.name, \" modified global properties restore...\"), _toConsumableArray(this.updatedValueSet.keys()));\n      }\n\n      if (--activeSandboxCount === 0) {\n        variableWhiteList.forEach(function (p) {\n          if (_this2.proxy.hasOwnProperty(p)) {\n            // @ts-ignore\n            delete window[p];\n          }\n        });\n      }\n\n      this.sandboxRunning = false;\n    }\n  }]);\n\n  return ProxySandbox;\n}();\n\nexport { ProxySandbox as default };"]},"metadata":{},"sourceType":"module"}