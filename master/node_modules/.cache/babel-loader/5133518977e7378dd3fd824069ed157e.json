{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _cloneDeep from \"lodash/cloneDeep\";\nvar globalState = {};\nvar deps = {}; // 触发全局监听\n\nfunction emitGlobal(state, prevState) {\n  Object.keys(deps).forEach(function (id) {\n    if (deps[id] instanceof Function) {\n      deps[id](_cloneDeep(state), _cloneDeep(prevState));\n    }\n  });\n}\n\nexport function initGlobalState() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  if (state === globalState) {\n    console.warn('[qiankun] state has not changed！');\n  } else {\n    var prevGlobalState = _cloneDeep(globalState);\n\n    globalState = _cloneDeep(state);\n    emitGlobal(globalState, prevGlobalState);\n  }\n\n  return getMicroAppStateActions(\"global-\".concat(+new Date()), true);\n}\nexport function getMicroAppStateActions(id, isMaster) {\n  return {\n    /**\n     * onGlobalStateChange 全局依赖监听\n     *\n     * 收集 setState 时所需要触发的依赖\n     *\n     * 限制条件：每个子应用只有一个激活状态的全局监听，新监听覆盖旧监听，若只是监听部分属性，请使用 onGlobalStateChange\n     *\n     * 这么设计是为了减少全局监听滥用导致的内存爆炸\n     *\n     * 依赖数据结构为：\n     * {\n     *   {id}: callback\n     * }\n     *\n     * @param callback\n     * @param fireImmediately\n     */\n    onGlobalStateChange: function onGlobalStateChange(callback, fireImmediately) {\n      if (!(callback instanceof Function)) {\n        console.error('[qiankun] callback must be function!');\n        return;\n      }\n\n      if (deps[id]) {\n        console.warn(\"[qiankun] '\".concat(id, \"' global listener already exists before this, new listener will overwrite it.\"));\n      }\n\n      deps[id] = callback;\n\n      var cloneState = _cloneDeep(globalState);\n\n      if (fireImmediately) {\n        callback(cloneState, cloneState);\n      }\n    },\n\n    /**\n     * setGlobalState 更新 store 数据\n     *\n     * 1. 对输入 state 的第一层属性做校验，只有初始化时声明过的第一层（bucket）属性才会被更改\n     * 2. 修改 store 并触发全局监听\n     *\n     * @param state\n     */\n    setGlobalState: function setGlobalState() {\n      var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (state === globalState) {\n        console.warn('[qiankun] state has not changed！');\n        return false;\n      }\n\n      var changeKeys = [];\n\n      var prevGlobalState = _cloneDeep(globalState);\n\n      globalState = _cloneDeep(Object.keys(state).reduce(function (_globalState, changeKey) {\n        if (isMaster || _globalState.hasOwnProperty(changeKey)) {\n          changeKeys.push(changeKey);\n          return Object.assign(_globalState, _defineProperty({}, changeKey, state[changeKey]));\n        }\n\n        console.warn(\"[qiankun] '\".concat(changeKey, \"' not declared when init state\\uFF01\"));\n        return _globalState;\n      }, globalState));\n\n      if (changeKeys.length === 0) {\n        console.warn('[qiankun] state has not changed！');\n        return false;\n      }\n\n      emitGlobal(globalState, prevGlobalState);\n      return true;\n    },\n    // 注销该应用下的依赖\n    offGlobalStateChange: function offGlobalStateChange() {\n      delete deps[id];\n      return true;\n    }\n  };\n}","map":{"version":3,"sources":["/Users/mory/Desktop/qiankun-react/master/node_modules/qiankun/es/globalState.js"],"names":["_defineProperty","_cloneDeep","globalState","deps","emitGlobal","state","prevState","Object","keys","forEach","id","Function","initGlobalState","arguments","length","undefined","console","warn","prevGlobalState","getMicroAppStateActions","concat","Date","isMaster","onGlobalStateChange","callback","fireImmediately","error","cloneState","setGlobalState","changeKeys","reduce","_globalState","changeKey","hasOwnProperty","push","assign","offGlobalStateChange"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _cloneDeep from \"lodash/cloneDeep\";\nvar globalState = {};\nvar deps = {}; // 触发全局监听\n\nfunction emitGlobal(state, prevState) {\n  Object.keys(deps).forEach(function (id) {\n    if (deps[id] instanceof Function) {\n      deps[id](_cloneDeep(state), _cloneDeep(prevState));\n    }\n  });\n}\n\nexport function initGlobalState() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  if (state === globalState) {\n    console.warn('[qiankun] state has not changed！');\n  } else {\n    var prevGlobalState = _cloneDeep(globalState);\n\n    globalState = _cloneDeep(state);\n    emitGlobal(globalState, prevGlobalState);\n  }\n\n  return getMicroAppStateActions(\"global-\".concat(+new Date()), true);\n}\nexport function getMicroAppStateActions(id, isMaster) {\n  return {\n    /**\n     * onGlobalStateChange 全局依赖监听\n     *\n     * 收集 setState 时所需要触发的依赖\n     *\n     * 限制条件：每个子应用只有一个激活状态的全局监听，新监听覆盖旧监听，若只是监听部分属性，请使用 onGlobalStateChange\n     *\n     * 这么设计是为了减少全局监听滥用导致的内存爆炸\n     *\n     * 依赖数据结构为：\n     * {\n     *   {id}: callback\n     * }\n     *\n     * @param callback\n     * @param fireImmediately\n     */\n    onGlobalStateChange: function onGlobalStateChange(callback, fireImmediately) {\n      if (!(callback instanceof Function)) {\n        console.error('[qiankun] callback must be function!');\n        return;\n      }\n\n      if (deps[id]) {\n        console.warn(\"[qiankun] '\".concat(id, \"' global listener already exists before this, new listener will overwrite it.\"));\n      }\n\n      deps[id] = callback;\n\n      var cloneState = _cloneDeep(globalState);\n\n      if (fireImmediately) {\n        callback(cloneState, cloneState);\n      }\n    },\n\n    /**\n     * setGlobalState 更新 store 数据\n     *\n     * 1. 对输入 state 的第一层属性做校验，只有初始化时声明过的第一层（bucket）属性才会被更改\n     * 2. 修改 store 并触发全局监听\n     *\n     * @param state\n     */\n    setGlobalState: function setGlobalState() {\n      var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (state === globalState) {\n        console.warn('[qiankun] state has not changed！');\n        return false;\n      }\n\n      var changeKeys = [];\n\n      var prevGlobalState = _cloneDeep(globalState);\n\n      globalState = _cloneDeep(Object.keys(state).reduce(function (_globalState, changeKey) {\n        if (isMaster || _globalState.hasOwnProperty(changeKey)) {\n          changeKeys.push(changeKey);\n          return Object.assign(_globalState, _defineProperty({}, changeKey, state[changeKey]));\n        }\n\n        console.warn(\"[qiankun] '\".concat(changeKey, \"' not declared when init state\\uFF01\"));\n        return _globalState;\n      }, globalState));\n\n      if (changeKeys.length === 0) {\n        console.warn('[qiankun] state has not changed！');\n        return false;\n      }\n\n      emitGlobal(globalState, prevGlobalState);\n      return true;\n    },\n    // 注销该应用下的依赖\n    offGlobalStateChange: function offGlobalStateChange() {\n      delete deps[id];\n      return true;\n    }\n  };\n}"]},"metadata":{},"sourceType":"module"}