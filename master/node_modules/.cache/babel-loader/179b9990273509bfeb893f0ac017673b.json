{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _typeof from \"@babel/runtime/helpers/typeof\";\n/**\n * @author Kuitos\n * @homepage https://github.com/kuitos/\n * @since 2019-02-25\n * fork from https://github.com/systemjs/systemjs/blob/master/src/extras/global.js\n */\n\nvar isIE11 = typeof navigator !== 'undefined' && navigator.userAgent.indexOf('Trident') !== -1;\n\nfunction shouldSkipProperty(global, p) {\n  if (!global.hasOwnProperty(p) || !isNaN(p) && p < global.length) return true;\n\n  if (isIE11) {\n    // https://github.com/kuitos/import-html-entry/pull/32，最小化 try 范围\n    try {\n      return global[p] && typeof window !== 'undefined' && global[p].parent === window;\n    } catch (err) {\n      return true;\n    }\n  } else {\n    return false;\n  }\n} // safari unpredictably lists some new globals first or second in object order\n\n\nvar firstGlobalProp, secondGlobalProp, lastGlobalProp;\nexport function getGlobalProp(global) {\n  var cnt = 0;\n  var lastProp;\n  var hasIframe = false;\n\n  for (var p in global) {\n    if (shouldSkipProperty(global, p)) continue; // 遍历 iframe，检查 window 上的属性值是否是 iframe，是则跳过后面的 first 和 second 判断\n\n    for (var i = 0; i < window.frames.length && !hasIframe; i++) {\n      var frame = window.frames[i];\n\n      if (frame === global[p]) {\n        hasIframe = true;\n        break;\n      }\n    }\n\n    if (!hasIframe && (cnt === 0 && p !== firstGlobalProp || cnt === 1 && p !== secondGlobalProp)) return p;\n    cnt++;\n    lastProp = p;\n  }\n\n  if (lastProp !== lastGlobalProp) return lastProp;\n}\nexport function noteGlobalProps(global) {\n  // alternatively Object.keys(global).pop()\n  // but this may be faster (pending benchmarks)\n  firstGlobalProp = secondGlobalProp = undefined;\n\n  for (var p in global) {\n    if (shouldSkipProperty(global, p)) continue;\n    if (!firstGlobalProp) firstGlobalProp = p;else if (!secondGlobalProp) secondGlobalProp = p;\n    lastGlobalProp = p;\n  }\n\n  return lastGlobalProp;\n}\nexport function getInlineCode(match) {\n  var start = match.indexOf('>') + 1;\n  var end = match.lastIndexOf('<');\n  return match.substring(start, end);\n}\nexport function defaultGetPublicPath(entry) {\n  if (_typeof(entry) === 'object') {\n    return '/';\n  }\n\n  try {\n    // URL 构造函数不支持使用 // 前缀的 url\n    var _URL = new URL(entry.startsWith('//') ? \"\".concat(location.protocol).concat(entry) : entry, location.href),\n        origin = _URL.origin,\n        pathname = _URL.pathname;\n\n    var paths = pathname.split('/'); // 移除最后一个元素\n\n    paths.pop();\n    return \"\".concat(origin).concat(paths.join('/'), \"/\");\n  } catch (e) {\n    console.warn(e);\n    return '';\n  }\n} // Detect whether browser supports `<script type=module>` or not\n\nexport function isModuleScriptSupported() {\n  var s = document.createElement('script');\n  return 'noModule' in s;\n} // RIC and shim for browsers setTimeout() without it\n\nexport var requestIdleCallback = window.requestIdleCallback || function requestIdleCallback(cb) {\n  var start = Date.now();\n  return setTimeout(function () {\n    cb({\n      didTimeout: false,\n      timeRemaining: function timeRemaining() {\n        return Math.max(0, 50 - (Date.now() - start));\n      }\n    });\n  }, 1);\n};\nexport function readResAsString(response, autoDetectCharset) {\n  // 未启用自动检测\n  if (!autoDetectCharset) {\n    return response.text();\n  } // 如果没headers，发生在test环境下的mock数据，为兼容原有测试用例\n\n\n  if (!response.headers) {\n    return response.text();\n  } // 如果没返回content-type，走默认逻辑\n\n\n  var contentType = response.headers.get('Content-Type');\n\n  if (!contentType) {\n    return response.text();\n  } // 解析content-type内的charset\n  // Content-Type: text/html; charset=utf-8\n  // Content-Type: multipart/form-data; boundary=something\n  // GET请求下不会出现第二种content-type\n\n\n  var charset = 'utf-8';\n  var parts = contentType.split(';');\n\n  if (parts.length === 2) {\n    var _parts$1$split = parts[1].split('='),\n        _parts$1$split2 = _slicedToArray(_parts$1$split, 2),\n        value = _parts$1$split2[1];\n\n    var encoding = value && value.trim();\n\n    if (encoding) {\n      charset = encoding;\n    }\n  } // 如果还是utf-8，那么走默认，兼容原有逻辑，这段代码删除也应该工作\n\n\n  if (charset.toUpperCase() === 'UTF-8') {\n    return response.text();\n  } // 走流读取，编码可能是gbk，gb2312等，比如sofa 3默认是gbk编码\n\n\n  return response.blob().then(function (file) {\n    return new Promise(function (resolve, reject) {\n      var reader = new window.FileReader();\n\n      reader.onload = function () {\n        resolve(reader.result);\n      };\n\n      reader.onerror = reject;\n      reader.readAsText(file, charset);\n    });\n  });\n}","map":{"version":3,"sources":["/Users/mory/Desktop/qiankun-react/master/node_modules/import-html-entry/esm/utils.js"],"names":["_slicedToArray","_typeof","isIE11","navigator","userAgent","indexOf","shouldSkipProperty","global","p","hasOwnProperty","isNaN","length","window","parent","err","firstGlobalProp","secondGlobalProp","lastGlobalProp","getGlobalProp","cnt","lastProp","hasIframe","i","frames","frame","noteGlobalProps","undefined","getInlineCode","match","start","end","lastIndexOf","substring","defaultGetPublicPath","entry","_URL","URL","startsWith","concat","location","protocol","href","origin","pathname","paths","split","pop","join","e","console","warn","isModuleScriptSupported","s","document","createElement","requestIdleCallback","cb","Date","now","setTimeout","didTimeout","timeRemaining","Math","max","readResAsString","response","autoDetectCharset","text","headers","contentType","get","charset","parts","_parts$1$split","_parts$1$split2","value","encoding","trim","toUpperCase","blob","then","file","Promise","resolve","reject","reader","FileReader","onload","result","onerror","readAsText"],"mappings":"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","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _typeof from \"@babel/runtime/helpers/typeof\";\n\n/**\n * @author Kuitos\n * @homepage https://github.com/kuitos/\n * @since 2019-02-25\n * fork from https://github.com/systemjs/systemjs/blob/master/src/extras/global.js\n */\nvar isIE11 = typeof navigator !== 'undefined' && navigator.userAgent.indexOf('Trident') !== -1;\n\nfunction shouldSkipProperty(global, p) {\n  if (!global.hasOwnProperty(p) || !isNaN(p) && p < global.length) return true;\n\n  if (isIE11) {\n    // https://github.com/kuitos/import-html-entry/pull/32，最小化 try 范围\n    try {\n      return global[p] && typeof window !== 'undefined' && global[p].parent === window;\n    } catch (err) {\n      return true;\n    }\n  } else {\n    return false;\n  }\n} // safari unpredictably lists some new globals first or second in object order\n\n\nvar firstGlobalProp, secondGlobalProp, lastGlobalProp;\nexport function getGlobalProp(global) {\n  var cnt = 0;\n  var lastProp;\n  var hasIframe = false;\n\n  for (var p in global) {\n    if (shouldSkipProperty(global, p)) continue; // 遍历 iframe，检查 window 上的属性值是否是 iframe，是则跳过后面的 first 和 second 判断\n\n    for (var i = 0; i < window.frames.length && !hasIframe; i++) {\n      var frame = window.frames[i];\n\n      if (frame === global[p]) {\n        hasIframe = true;\n        break;\n      }\n    }\n\n    if (!hasIframe && (cnt === 0 && p !== firstGlobalProp || cnt === 1 && p !== secondGlobalProp)) return p;\n    cnt++;\n    lastProp = p;\n  }\n\n  if (lastProp !== lastGlobalProp) return lastProp;\n}\nexport function noteGlobalProps(global) {\n  // alternatively Object.keys(global).pop()\n  // but this may be faster (pending benchmarks)\n  firstGlobalProp = secondGlobalProp = undefined;\n\n  for (var p in global) {\n    if (shouldSkipProperty(global, p)) continue;\n    if (!firstGlobalProp) firstGlobalProp = p;else if (!secondGlobalProp) secondGlobalProp = p;\n    lastGlobalProp = p;\n  }\n\n  return lastGlobalProp;\n}\nexport function getInlineCode(match) {\n  var start = match.indexOf('>') + 1;\n  var end = match.lastIndexOf('<');\n  return match.substring(start, end);\n}\nexport function defaultGetPublicPath(entry) {\n  if (_typeof(entry) === 'object') {\n    return '/';\n  }\n\n  try {\n    // URL 构造函数不支持使用 // 前缀的 url\n    var _URL = new URL(entry.startsWith('//') ? \"\".concat(location.protocol).concat(entry) : entry, location.href),\n        origin = _URL.origin,\n        pathname = _URL.pathname;\n\n    var paths = pathname.split('/'); // 移除最后一个元素\n\n    paths.pop();\n    return \"\".concat(origin).concat(paths.join('/'), \"/\");\n  } catch (e) {\n    console.warn(e);\n    return '';\n  }\n} // Detect whether browser supports `<script type=module>` or not\n\nexport function isModuleScriptSupported() {\n  var s = document.createElement('script');\n  return 'noModule' in s;\n} // RIC and shim for browsers setTimeout() without it\n\nexport var requestIdleCallback = window.requestIdleCallback || function requestIdleCallback(cb) {\n  var start = Date.now();\n  return setTimeout(function () {\n    cb({\n      didTimeout: false,\n      timeRemaining: function timeRemaining() {\n        return Math.max(0, 50 - (Date.now() - start));\n      }\n    });\n  }, 1);\n};\nexport function readResAsString(response, autoDetectCharset) {\n  // 未启用自动检测\n  if (!autoDetectCharset) {\n    return response.text();\n  } // 如果没headers，发生在test环境下的mock数据，为兼容原有测试用例\n\n\n  if (!response.headers) {\n    return response.text();\n  } // 如果没返回content-type，走默认逻辑\n\n\n  var contentType = response.headers.get('Content-Type');\n\n  if (!contentType) {\n    return response.text();\n  } // 解析content-type内的charset\n  // Content-Type: text/html; charset=utf-8\n  // Content-Type: multipart/form-data; boundary=something\n  // GET请求下不会出现第二种content-type\n\n\n  var charset = 'utf-8';\n  var parts = contentType.split(';');\n\n  if (parts.length === 2) {\n    var _parts$1$split = parts[1].split('='),\n        _parts$1$split2 = _slicedToArray(_parts$1$split, 2),\n        value = _parts$1$split2[1];\n\n    var encoding = value && value.trim();\n\n    if (encoding) {\n      charset = encoding;\n    }\n  } // 如果还是utf-8，那么走默认，兼容原有逻辑，这段代码删除也应该工作\n\n\n  if (charset.toUpperCase() === 'UTF-8') {\n    return response.text();\n  } // 走流读取，编码可能是gbk，gb2312等，比如sofa 3默认是gbk编码\n\n\n  return response.blob().then(function (file) {\n    return new Promise(function (resolve, reject) {\n      var reader = new window.FileReader();\n\n      reader.onload = function () {\n        resolve(reader.result);\n      };\n\n      reader.onerror = reject;\n      reader.readAsText(file, charset);\n    });\n  });\n}"]},"metadata":{},"sourceType":"module"}